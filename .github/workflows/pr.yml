name: Pull Request
on:
  pull_request:
    types: [opened, synchronize]
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_role_name: webinvest-pipeline_cd-nonprod
  TF_VAR_account_id: '069537940840'
  TF_VAR_team_github_token: ${{ secrets.TEAM_GITHUB_TOKEN }}
  TF_VAR_teams_webhook: ${{ secrets.TEAMS_WEBHOOK_URL }}
  PR_NUMBER: ${{ github.event.number }}
  REPO_NAME: ${{ github.event.repository.name }}
  REACT_APP_STAGE: development
concurrency: queue-${{ github.ref }} # Queue builds per git ref. concurrent updates to terraform cause errors.

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: module
          NODE_AUTH_TOKEN: ${{ secrets.TEAM_PAT }}
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-module-${{ hashFiles('**/package-lock.json') }}

      - name: Set up registry
        uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: 'https://npm.pkg.github.com'

      - name: Install packages
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TEAM_PAT }}

  analysis:
    name: Run SAST tests
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: module
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-module-${{ hashFiles('**/package-lock.json') }}

      - name: Run Sast
        run: |
          npm run sast:Format
          npm run sast:Lint

  unittest:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: module
          NODE_AUTH_TOKEN: ${{ secrets.TEAM_PAT }}
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-module-${{ hashFiles('**/package-lock.json') }}
          node-version: latest

      - name: Run unit tests
        run: |
          npm run test:Unit

  build:
    name: Build static site
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: module
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-module-${{ hashFiles('**/package-lock.json') }}
          node-version: latest

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'

      - name: Build site
        env:
          CI: false
          PUBLIC_URL: /${{ env.REPO_NAME }}/v/${{ env.PR_NUMBER }}/
        run: |
          npm run build
          echo ${{ steps.version.outputs.prop }}${{ github.run_number }}-${{ github.head_ref }} > build/version.txt

      - uses: actions/upload-artifact@v2
        name: Upload release artifact
        with:
          name: build
          path: build/
          retention-days: 5
          if-no-files-found: error

  deploy:
    name: Deploy site to PR folder
    runs-on: ubuntu-latest
    environment: nonprod
    needs:
      - build
      - analysis
      - unittest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::${{ env.TF_VAR_account_id }}:role/${{ env.TF_VAR_role_name }}
          role-duration-seconds: 1200

      - name: Upload static content to PR folder
        run: |
          cd build && aws s3 sync . s3://webinvest-nonprod-${{ env.TF_VAR_account_id }}/${{ env.REPO_NAME }}/v/${{ env.PR_NUMBER }} --exclude 'static/*' --cache-control 'no-cache'

      - name: Upload and set caching for static prefix for PR folder
        run: |
          cd build && aws s3 sync . s3://webinvest-nonprod-${{ env.TF_VAR_account_id }}/${{ env.REPO_NAME }}/v/${{ env.PR_NUMBER }} --include 'static/*' --cache-control 'max-age=31536000'

      - uses: tzkhan/pr-update-action@v2
        with:
          repo-token: '${{ secrets.TEAM_PAT }}'
          head-branch-regex: '.*'
          body-template: |

            ---

            **Do not modify anything below the line**
            [Link to test site for %headbranch%](https://hdev.nonprod.cmcmarketsinvest.com/${{ env.REPO_NAME }}/v/${{env.PR_NUMBER }}/login)
            [Link to frontend site for %headbranch%](https://hdev.nonprod.cmcmarketsinvest.com/webinvest-frontend/v/latest/index.html?modules=${{ env.REPO_NAME }}:${{ env.PR_NUMBER }})
          body-update-action: 'suffix'
          body-uppercase-head-match: false

  integration-tests:
    name: Integration Tests - ${{ matrix.browser }}
    environment: nonprod
    needs:
      - deploy
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    # Use GitHub Private runners
    runs-on: ['self-hosted', 'linux', 'x64', 'apac', 'nonprod']
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: module
          NODE_AUTH_TOKEN: ${{ secrets.TEAM_PAT }}
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-module-${{ hashFiles('**/package-lock.json') }}
          node-version: 16.x

      - name: Install packages
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TEAM_PAT }}

      - name: Install operating system dependencies
        run: |
          npx playwright install

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::${{ env.TF_VAR_account_id }}:role/${{ env.TF_VAR_role_name }}
          role-duration-seconds: 1200

      - name: Execute tests
        run: |
          export URL=https://hdev.nonprod.cmcmarketsinvest.com/${{ env.REPO_NAME }}/v/${{ env.PR_NUMBER }}
          echo "Executing E2E tests on '${URL}'"
          npm run test:playwright:ci
        env:
          FORGEROCK_PASSWORD: ${{ secrets.FORGEROCK_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ env.REPO_NAME }}-${{ env.PR_NUMBER }}-${{ matrix.os }}-${{ matrix.browser }}
          path: tests/test-results
          retention-days: 5
